{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-routing/src/contexts.js","../../node_modules/svelte-routing/src/history.js","../../node_modules/svelte-routing/src/utils.js","../../node_modules/svelte-routing/src/Router.svelte","../../node_modules/svelte-routing/src/Route.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/Modal.svelte","../../src/MainMenu.svelte","../../src/Commands.svelte","../../src/Help.svelte","../../src/Commands/ask.js","../../src/Commands/clear.js","../../src/Commands/combine.js","../../src/Commands/give.js","../../src/Commands/incant.js","../../src/Commands/incantations.js","../../src/Commands/listInventory.js","../../src/Commands/look.js","../../src/Commands/move.js","../../src/Commands/take.js","../../src/Commands/use.js","../../src/ScriptCommands/addItem.js","../../src/ScriptCommands/choice.js","../../src/ScriptCommands/callCommon.js","../../src/ScriptCommands/decVar.js","../../src/ScriptCommands/dialog.js","../../src/ScriptCommands/end.js","../../src/ScriptCommands/gameOver.js","../../src/ScriptCommands/ifFlag.js","../../src/ScriptCommands/ifFlagWrite.js","../../src/ScriptCommands/ifHasItem.js","../../src/ScriptCommands/ifRoom.js","../../src/ScriptCommands/ifVar.js","../../src/ScriptCommands/incVar.js","../../src/ScriptCommands/invokeRoom.js","../../src/ScriptCommands/ifIsIn.js","../../src/ScriptCommands/pickOne.js","../../src/ScriptCommands/removeItem.js","../../src/ScriptCommands/saveGame.js","../../src/ScriptCommands/setFlag.js","../../src/ScriptCommands/switchBranch.js","../../src/ScriptCommands/unsetFlag.js","../../src/ScriptCommands/waitForInput.js","../../src/ScriptCommands/write.js","../../src/ScriptCommands/writeRoomCoords.js","../../src/Helpers/findItem.js","../../src/Helpers/findTarget.js","../../src/Helpers/getFeature.js","../../src/Helpers/getFlag.js","../../src/Helpers/getLocalVars.js","../../src/Helpers/getRoomDictionary.js","../../src/Helpers/getVarValue.js","../../src/Helpers/handleChoiceInput.js","../../src/Helpers/handleDarkRoom.js","../../src/Helpers/handleDevCmd.js","../../src/Helpers/handleUserEntry.js","../../src/Helpers/knowsAnyIncantations.js","../../src/ScriptCommands/loadRoom.js","../../src/Helpers/parseCmds.js","../../src/Helpers/parseStringCmd.js","../../src/Helpers/setVarValue.js","../../src/Helpers/showFeatures.js","../../src/Helpers/unknownCmd.js","../../src/Helpers/unknownTarget.js","../../src/Helpers/getGameState.js","../../src/Location.svelte","../../src/Game.svelte","../../src/Start.svelte","../../src/Walkthrough.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nconst seen_callbacks = new Set();\nfunction flush() {\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.18.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_keys, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import { fade, fly } from \"svelte/transition\";\r\n\r\n  export let width;\r\n  export let height;\r\n  export let showClose = false;\r\n\r\n  const dispatch = createEventDispatcher();\r\n  let windowWidth = 0;\r\n\r\n  $: widthStyle = width ? `width: ${width};` : \"\";\r\n  $: heightStyle = height ? `height: ${height};` : \"\";\r\n  $: modalStyle = widthStyle + heightStyle;\r\n\r\n  const getTransition = () => {\r\n    if (windowWidth > 500) {\r\n      return { y: 25, duration: 300 };\r\n    } else {\r\n      return { y: 0, duration: 300 };\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  fade {\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    background: black;\r\n    opacity: 0.85;\r\n    z-index: 1000;\r\n  }\r\n  modal {\r\n    background-color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    z-index: 1000;\r\n    background-color: #fff;\r\n    padding: 1em;\r\n    position: fixed;\r\n    border: 1px solid #eee;\r\n    border-radius: 5px;\r\n    overflow: auto;\r\n    top: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    bottom: 0px;\r\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),\r\n      0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    color: #222;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n  @media (min-width: 500px) {\r\n    modal {\r\n      max-height: calc(100% - 40px);\r\n      min-width: 500px;\r\n      width: auto;\r\n      left: 50%;\r\n      top: 50%;\r\n      right: initial;\r\n      bottom: initial;\r\n      -webkit-transform: perspective(1px) translateY(-50%) translateX(-50%);\r\n      transform: perspective(1px) translateY(-50%) translateX(-50%);\r\n    }\r\n  }\r\n\r\n  span {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0.2em;\r\n    font-variant: small-caps;\r\n    color: black;\r\n    cursor: pointer;\r\n    padding: 0.5em;\r\n    z-index: 1;\r\n  }\r\n\r\n  span:hover {\r\n    background-color: rgb(244, 0, 0, 0.2);\r\n  }\r\n\r\n  .showClose {\r\n    padding-top: 1.5em;\r\n  }\r\n</style>\r\n\r\n<svelte:window bind:innerWidth={windowWidth} />\r\n\r\n<fade transition:fade={{ duration: 200 }} />\r\n<modal class:showClose style={modalStyle} transition:fly={getTransition()}>\r\n  {#if showClose}\r\n    <span on:click={() => dispatch('close')}>x</span>\r\n  {/if}\r\n  <slot />\r\n</modal>","<script>\r\n  import { createEventDispatcher, onMount } from \"svelte\";\r\n  import Modal from \"./Modal.svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n  let hasSavedGame = false;\r\n  $: continueDisabled = !hasSavedGame;\r\n  let exportString = \"\";\r\n  let exportTextbox = null;\r\n\r\n  onMount(() => {\r\n    if (localStorage.getItem(\"game_state\")) {\r\n      hasSavedGame = true;\r\n    }\r\n  });\r\n\r\n  const startImport = () => {\r\n    if (hasSavedGame) {\r\n      if (\r\n        !confirm(\r\n          \"Importing a game will erase your current saved game. Continue?\"\r\n        )\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var gameStr = prompt(\"Paste your save code here and press OK.\", \"\");\r\n\r\n    if (!gameStr) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let json = atob(gameStr);\r\n      let gameState = JSON.parse(json);\r\n      localStorage.setItem(\"game_state\", json);\r\n      dispatch(\"continueGame\");\r\n    } catch {\r\n      alert(\"Your save code is invalid.\");\r\n    }\r\n  };\r\n\r\n  const startExport = () => {\r\n    exportString = btoa(localStorage.getItem(\"game_state\"));\r\n  };\r\n\r\n  const copyExport = () => {\r\n    exportTextbox.select();\r\n    try {\r\n      document.execCommand(\"copy\");\r\n      alert(\"Copied to clipboard. Paste it somewhere safe!\");\r\n    } catch {\r\n      alert(\r\n        \"FAiled to copy to clipboard. Select everything in the textbox manually and press CTRL+C instead.\"\r\n      );\r\n    }\r\n  };\r\n</script>\r\n\r\n<h1>Adventure</h1>\r\n<p>A world of mystery and adventure awaits!</p>\r\n{#if location.origin.toString().indexOf(\"github.io\") !== -1}\r\n<p style=\"background-color: red; color: white; font-weight: bold; width:100%;\">\r\n  This game is available on itch.io! <a href=\"https://enigmabrand.itch.io/adventure\">Please click here to play on itch.io instead!</a>\r\n</p>\r\n{/if}\r\n<button on:click={() => dispatch(\"newGame\")}>New Game</button>\r\n<button\r\n  class:continueDisabled\r\n  disabled={continueDisabled}\r\n  on:click={() => dispatch(\"continueGame\")}\r\n>\r\n  Continue Saved Game\r\n</button>\r\n<p>\r\n  If you want to move your saved game onto a different browser, you can export\r\n  it to text and then import it in a different browser.\r\n</p>\r\n<button on:click={startImport}>Import Saved Game ←</button>\r\n{#if hasSavedGame}\r\n  <button on:click={startExport}>Export Saved Game →</button>\r\n{/if}\r\n<p>\r\n  Download and print a few\r\n  <a href={window.hostDir + \"/adventure-blank-map.pdf\"} target=\"_blank\">\r\n    blank maps\r\n  </a>\r\n  and fill them in as you play the game!<br />(Make sure to find the in-game\r\n  compass first!)\r\n</p>\r\n<p>\r\n  Did you like the game? Hate it? Or did you find a bug or a typo? I'd love to\r\n  hear about it! Go check out the\r\n  <a href=\"https://github.com/jschnurer/text-adv-svelte#readme\"\r\n    >readme at github</a\r\n  >\r\n  for my contact info!\r\n</p>\r\n{#if exportString}\r\n  <Modal showClose={true} on:close={() => (exportString = \"\")}>\r\n    <p>\r\n      Copy this save code and put it somewhere safe. Then, on another computer,\r\n      you can import this save by clicking Import Saved Game and pasting this\r\n      code in.\r\n    </p>\r\n    <textarea\r\n      value={exportString}\r\n      readonly=\"readonly\"\r\n      class=\"export-text\"\r\n      bind:this={exportTextbox}\r\n    />\r\n    <span class=\"copy\" on:click={copyExport}>\r\n      <span>\r\n        📄\r\n        <span>📄</span>\r\n      </span>\r\n      Copy to clipboard\r\n    </span>\r\n  </Modal>\r\n{/if}\r\n\r\n<style>\r\n  button {\r\n    width: 15em;\r\n  }\r\n  .continueDisabled {\r\n    background-color: #666;\r\n    color: #999;\r\n    border-style: solid;\r\n    border-color: #666;\r\n  }\r\n  .export-text {\r\n    font-size: 0.5em;\r\n    min-height: 15em;\r\n  }\r\n  .copy {\r\n    text-decoration: underline;\r\n    color: #0000ee;\r\n    cursor: pointer;\r\n    display: block;\r\n    margin-top: 0.5em;\r\n  }\r\n  .copy > span {\r\n    font-size: 0.875em;\r\n    margin-right: 0.125em;\r\n    position: relative;\r\n    top: -0.25em;\r\n    left: -0.125em;\r\n  }\r\n  .copy > span > span {\r\n    position: absolute;\r\n    top: 0.25em;\r\n    left: 0.25em;\r\n  }\r\n</style>\r\n","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let showIncantations = false;\r\n\r\n  function executeCommand() {\r\n    let cmd = this.innerText;\r\n\r\n    let matches = cmd.match(/(\\[.+?\\])/g);\r\n\r\n    if (matches) {\r\n      for (let i = 0; i < matches.length; i++) {\r\n        let value = prompt(`Enter a value for ${matches[i]}:`);\r\n\r\n        value = value\r\n          .replace(/\\[/g, \"\")\r\n          .replace(/\\]/g, \"\")\r\n          .trim();\r\n\r\n        if (!value) {\r\n          return;\r\n        }\r\n\r\n        cmd = cmd.replace(matches[i], value);\r\n      }\r\n    }\r\n\r\n    dispatch(\"command\", {\r\n      command: cmd\r\n    });\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .commands {\r\n    z-index: 1;\r\n    position: relative;\r\n    box-shadow: 0 0 10em #222;\r\n    background-color: #222;\r\n    padding: 1em;\r\n    flex: none;\r\n    overflow: auto;\r\n    align-self: flex-start;\r\n    font-size: 0.85em;\r\n    width: 270px;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .commands {\r\n      flex: auto;\r\n      align-self: stretch;\r\n      width: auto;\r\n    }\r\n  }\r\n\r\n  h4 {\r\n    margin-top: 0;\r\n  }\r\n\r\n  ul {\r\n    margin: 0;\r\n    list-style: none;\r\n    padding: 0;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  li {\r\n    flex-basis: 50%;\r\n    cursor: pointer;\r\n  }\r\n\r\n  li:hover {\r\n    color: white;\r\n  }\r\n\r\n  .shortcut {\r\n    color: white;\r\n    white-space: nowrap;\r\n  }\r\n</style>\r\n\r\n<div class=\"commands\">\r\n  <h4>Common Commands</h4>\r\n  <ul>\r\n    <li on:click={executeCommand} title=\"Looks all around you.\">\r\n      <span class=\"shortcut\">l</span>ook\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Looks at a specific object or person.\">\r\n      <span class=\"shortcut\">l</span>ook [target]\r\n    </li>\r\n    <li\r\n      on:click={executeCommand}\r\n      title=\"Takes an object and adds it to your inventory.\">\r\n      <span class=\"shortcut\">t</span>ake [target]\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Lists the items in your inventory.\">\r\n      <span class=\"shortcut\">i</span>nventory\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Travel north.\">\r\n      <span class=\"shortcut\">n</span>orth\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Travel south.\">\r\n      <span class=\"shortcut\">s</span>outh\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Travel east.\">\r\n      <span class=\"shortcut\">e</span>ast\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Travel west.\">\r\n      <span class=\"shortcut\">w</span>est\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Travel upward.\">\r\n      <span class=\"shortcut\">u</span>p\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Travel downward.\">\r\n      <span class=\"shortcut\">d</span>own\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Enters a building.\">\r\n      <span class=\"shortcut\">enter</span> [target]\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Touches a cairn and saves your game.\">\r\n      <span class=\"shortcut\">touch</span> cairn\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Clears the game window of all text.\">\r\n      <span class=\"shortcut\">cl</span>ear\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Moves the target out of the way.\">\r\n      <span class=\"shortcut\">move</span> [target]\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Uses the specified object.\">\r\n      <span class=\"shortcut\">use</span> [target]\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Opens the specified object.\">\r\n      <span class=\"shortcut\">open</span> [target]\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Pushes the specified object.\">\r\n      <span class=\"shortcut\">push</span> [target]\r\n    </li>\r\n    <li on:click={executeCommand} title=\"Closes the specified object.\">\r\n      <span class=\"shortcut\">close</span> [target]\r\n    </li>\r\n    <li\r\n      on:click={executeCommand}\r\n      title=\"Greets a person and starts a conversation.\">\r\n      <span class=\"shortcut\">greet</span> [person]\r\n    </li>\r\n    <li\r\n      on:click={executeCommand}\r\n      title=\"Gives the specified object to the specified person.\">\r\n      <span class=\"shortcut\">give</span> [object] to [person]\r\n    </li>\r\n    {#if showIncantations}\r\n      <li \r\n        on:click={executeCommand}\r\n        title=\"Incants an incantation.\">\r\n        <span class=\"shortcut\">incant</span> [incantation]\r\n      </li>\r\n      <li \r\n        on:click={executeCommand}\r\n        title=\"Lists the incantations known to you.\">\r\n        <span class=\"shortcut\">incantations</span></li>\r\n    {/if}\r\n    <li \r\n      on:click={executeCommand}\r\n      title=\"Uses a specific object on the target.\">\r\n      <span class=\"shortcut\">use [object] on [target]</span></li>\r\n    <li \r\n      on:click={executeCommand}\r\n      title=\"Asks a person about a specific topic.\">\r\n      <span class=\"shortcut\">ask [person] about [topic]</span></li>\r\n  </ul>\r\n</div>\r\n","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let allowTogglingHints = false;\r\n  export let showHints = false;\r\n  $: onOrOff = showHints ? \"on\" : \"off\";\r\n  $: opposite = showHints ? \"off\" : \"on\";\r\n</script>\r\n\r\n<h3>Help</h3>\r\n<room>\r\n  <h4>Feedback</h4>\r\n  <p>\r\n    Did you like the game? Hate it? Or did you find a bug or a typo? I'd love\r\n    to hear about it! Go check out the\r\n    <a href=\"https://github.com/jschnurer/text-adv-svelte#readme\">readme at github</a>\r\n    for my contact info!\r\n  </p>\r\n  <h4>Playing the Game</h4>\r\n  <p>Control the game and interact with the world by typing commands.</p>\r\n  <p>\r\n    You play Adventure by typing commands into the textbox and pressing Enter.\r\n    Many commands have a shorthand so you don't have to type the entire word.\r\n    For example, \"look\" is a command you should use A LOT. Instead of typing\r\n    \"look\" all the time, you can just enter \"l\". Whenever a command is mentioned\r\n    below, its shortcut (if there is one) is written after it in parentheses.\r\n  </p>\r\n  <p>\r\n    You can do things like \"look\" (l) or \"take\" (t) (and many other things too!)\r\n    When you want to interact with something specific, type it after your\r\n    command. The commands should be very simple. For example, instead of saying\r\n    \"look at the tree\" you would say \"look tree\". Generally, anything you type\r\n    should be either one or two words (separated by a space). Sometimes,\r\n    however, you may need to be more descriptive. For example, if you see\r\n    \"scorch marks\" and want to look at them, you would have to type \"look scorch\r\n    marks\" since typing \"look marks\" or \"look scorch\" doesn't really convey what\r\n    you want to do.\r\n  </p>\r\n  <p>\r\n    The game will display the 30 most recent messages. You can scroll to review\r\n    old message if you think it would help. If it ever gets unbearable and you\r\n    want a blank slate, you can use the \"clear\" (cl) command to clear out all\r\n    messages. Afterward, you should \"look\" again or else you're just looking at\r\n    a blank screen.\r\n  </p>\r\n  <p>\r\n    Pressing up lets you cycle through your most-recently entered 10 commands.\r\n    You can also press down to cycle the other way.\r\n  </p>\r\n  <h4>Interacting With Objects</h4>\r\n  <p>\r\n    You will need to often interact with objects in the environment and items in\r\n    your inventory. To do so, you can most of the time do what makes sense. If\r\n    you see a button, you can probably \"push button\". However, sometimes\r\n    interacting with something doesn't really have a single verb that makes\r\n    sense. For example, what verb would you use to interact with a computer?\r\n    \"type computer\"? \"type keyboard\"? \"push keys\"? None of these really convey\r\n    using a computer. In these cases, you can simply type \"use [target]\".\r\n  </p>\r\n  <p>\r\n    Sometimes, interacting with something requires more than just using it. You\r\n    may need to use another item on the thing you want to interact with. For\r\n    example, if you want to unlock a locked door and you have a key, you may\r\n    need to type \"use key on door\". You can try using anything on anything else\r\n    just to see if it works. If it doesn't work, you won't lose your item.\r\n  </p>\r\n  <h4>Navigating the World</h4>\r\n  <p>\r\n    You can move between areas by using the commands \"north\" (n), \"south\" (s),\r\n    \"east\" (e), \"west\" (w), \"up\" (u), and \"down\" (d). Area descriptions will\r\n    tell you the directions you're able to move (e.g. \"a path leads north\").\r\n  </p>\r\n  <p>\r\n    If you have a hard time keeping track of where you are or the layout of the\r\n    game world, you could always have a piece of paper and jot down the names of\r\n    the areas with lines connecting them. Oldschool!\r\n  </p>\r\n  <p>\r\n    <a href={window.hostDir + \"/adventure-blank-map.pdf\"} target=\"_blank\">\r\n      Click here to download a blank map to get you started!\r\n    </a>\r\n  </p>\r\n  <h4>Items and Inventory</h4>\r\n  <p>\r\n    When you acquire things in the game, usually by using \"take [target]\", they\r\n    are added to your inventory. You can carry a LOT of stuff. You can check\r\n    what you're carrying by typing the \"inventory\" (or \"i\") command! You can\r\n    look at things in your inventory too! In fact, you can do all sorts of\r\n    things to the stuff in your inventory.\r\n  </p>\r\n  <h4>Meeting and Greeting</h4>\r\n  <p>\r\n    Sometimes you may meet characters in the game world. Characters have a few\r\n    special interactions that objects in the world don't have. The first of\r\n    which is the ability to greet them. You can greet a character by typing\r\n    \"greet [target]\".\r\n  </p>\r\n  <p>\r\n    Some characters will even let you ask them about things. You can ask\r\n    questions by typing \"ask [target] about [topic]\". If the topic is something\r\n    they'd know about, they'll respond. Feel free to ask about all kinds of\r\n    stuff!\r\n  </p>\r\n  <p>\r\n    You can also give things to characters. You can give an item to someone by\r\n    typing \"give [item] to [target]\". If it's something that the character\r\n    wants, they're respond.\r\n  </p>\r\n  <h4>Advice</h4>\r\n  <p>\r\n    You should probably \"look\" at things a lot. Who know's what might be useful\r\n    or hiding something else? And death lurks around every corner. You can also\r\n    look at the area you're in by typing just \"look\" without a target.\r\n  </p>\r\n  <p>\r\n    Most of the time you won't learn about everything that's in an area just by\r\n    entering it and looking at the area overall. As you look at specific things\r\n    in the world you may learn about things you hadn't noticed before. For\r\n    example, when you enter some area it might tell you that there's a box. If\r\n    you tried to \"look box\" you might learn that there's an item in the box.\r\n    After you learn that there's an item in the box, you could look or take that\r\n    item!\r\n  </p>\r\n  <p>\r\n    Throughout the game world you may come across cairns. In the game world,\r\n    these are small stacks of stones measuring only 2-3 feet tall that are\r\n    imbued with some sort of supernatural power to aid travelers and explorers.\r\n    When you find one in the world, you should \"touch\" it. When you touch one,\r\n    you attune your soul to the cairn. If your adventure is cut short by\r\n    tragedy, you can restart from the last cairn you touched.\r\n  </p>\r\n  <p>\r\n    If you need more help, you can view the\r\n    <a href=\"walkthrough\" target=\"_blank\">Spoiler-riffic Walkthrough.</a>\r\n  </p>\r\n  {#if allowTogglingHints}\r\n    <h4>Hints / Enable Clicking</h4>\r\n    <p>\r\n      If you'd like, you can enable the experimental \"hint\" feature. This will\r\n      cause interactable things to be marked with a dashed underline. They will\r\n      then be interactable via clicking.\r\n    </p>\r\n    <p>\r\n      Hints are currently {onOrOff}. After toggling hints on or off, hints will\r\n      begin appearing the next time text is written on the screen.\r\n    </p>\r\n    <p>\r\n      <button\r\n        on:click={() => {\r\n          dispatch(\"toggleHints\");\r\n          showHints = !showHints;\r\n        }}\r\n      >\r\n        Turn Hints {opposite}\r\n      </button>\r\n    </p>\r\n  {/if}\r\n</room>\r\n\r\n<style>\r\n  p {\r\n    margin: initial 1em;\r\n  }\r\n</style>\r\n","export default function ask(args) {\r\n  if (args === null) {\r\n    this.write(\"Ask who about what?\");\r\n    return;\r\n  }\r\n\r\n  let matches = args.trim().match(\"(.+) about (.+)\");\r\n\r\n  if (!matches || matches.length !== 3) {\r\n    this.write(\"Huh? Try \\\"ask x about y\\\" instead.\");\r\n    return;\r\n  }\r\n\r\n  let target = this.findTarget(matches[1]);\r\n\r\n  if (!target) {\r\n    this.unknownTarget(matches[1]);\r\n    return;\r\n  }\r\n\r\n  if (!target.ask) {\r\n    this.write(\"You can't ask \" + target.slug + \" anything.\");\r\n    return;\r\n  }\r\n\r\n  this.parseCmds(target.ask);\r\n}","export default function clear() {\r\n  this.text = '';\r\n  this.update();\r\n}","export default function combine(args) {\r\n  if (args === null) {\r\n    this.write(\"Combine what with what?\");\r\n    return;\r\n  }\r\n\r\n  let matches = args.trim().match(\"(.+) with (.+)\");\r\n\r\n  if (matches.length !== 3) {\r\n    this.write(\"Huh? Try \\\"combine x with y\\\" instead.\");\r\n    return;\r\n  }\r\n\r\n  // Find the two targets.\r\n  let target1 = this.findTarget(slug1);\r\n  let target2 = this.findTarget(slug2);\r\n\r\n  if (!target1) {\r\n    this.unknownTarget(slug1);\r\n    return;\r\n  }\r\n\r\n  if (!target2) {\r\n    this.unknownTarget(slug2);\r\n    return;\r\n  }\r\n\r\n  let cmds = null;\r\n\r\n  if (target1[\"combine\"]) {\r\n    cmds = target1[\"combine\"][target2.slug]\r\n      || target1[\"combine\"][target2.id];\r\n  }\r\n\r\n  if (!cmds) {\r\n    if (target2[\"combine\"]) {\r\n      cmds = target2[\"combine\"][target1.slug]\r\n        || target2[\"combine\"][target1.id];\r\n    }\r\n  }\r\n\r\n  // Neither has the ability to combine with the other.\r\n  if (!cmds) {\r\n    this.write(\"That doesn't seem to work.\");\r\n    return;\r\n  }\r\n\r\n  // Execute the combine commands.\r\n  this.parseCmds(cmds);\r\n}","export default function give(args) {\r\n  if (args === null) {\r\n    this.write(\"Give what to whom?\");\r\n    return;\r\n  }\r\n\r\n  let matches = args.trim().match(\"(.+) to (.+)\");\r\n\r\n  if (!matches || matches.length !== 3) {\r\n    this.write(\"Huh? Try \\\"give [item] to [person]\\\" instead.\");\r\n    return;\r\n  }\r\n\r\n  let item = this.findItem(matches[1]);\r\n\r\n  if (!item) {\r\n    this.write(`You don't have a ${matches[1]}.`);\r\n    return;\r\n  }\r\n\r\n  let target = this.findTarget(matches[2]);\r\n\r\n  if (!target) {\r\n    this.unknownTarget(matches[2]);\r\n    return;\r\n  }\r\n\r\n  if (!target.give) {\r\n    this.write(`You can't give things to ${matches[2]}.`);\r\n    return;\r\n  }\r\n\r\n  if (target.give._requiredFlag && !this.getFlag(target.give._requiredFlag)) {\r\n    this.write(`You can't give things to ${matches[2]} yet.`);\r\n    return;\r\n  }\r\n\r\n  if (!target.give[item.id]) {\r\n    if (target.give[\"\"]) {\r\n      this.parseCmds(target.give[\"\"]);\r\n    } else {\r\n      this.write(\"You can't give that to them.\");\r\n    }\r\n    return;\r\n  }\r\n\r\n  this.parseCmds(target.give[item.id]);\r\n}","import incantations from \"../incantations.json\";\r\n\r\nexport default function incant(incantation) {\r\n  if (!this.knowsAnyIncantations()) {\r\n    this.unknownCmd('incant');\r\n    return false;\r\n  }\r\n\r\n  if (!incantation) {\r\n    this.write(\"You must incant a specific incantation. (\\\"incant [incantation]\\\")\");\r\n    return false;\r\n  }\r\n\r\n  let incantationObj = incantations.find(x => x.name === incantation.toLowerCase());\r\n\r\n  if (!incantationObj) {\r\n    this.write(\"You murmur useless syllables. It wasn't an incantation. You must've gotten it wrong...\");\r\n    return false;\r\n  }\r\n\r\n  if (!this.getFlag('G.' + incantation.toUpperCase())) {\r\n    this.write(\"You murmur useless syllables. It wasn't an incantation. You must've gotten it wrong...\");\r\n    return false;\r\n  }\r\n\r\n  if (!this.room.incant || !this.room.incant[incantation]) {\r\n    this.write(`You incant ${incantationObj.description}. Nothing happens...`);\r\n    return false;\r\n  }\r\n\r\n  this.parseCmds(this.room.incant[incantation]);\r\n};","import incantsList from \"../incantations.json\";\r\n\r\nexport default function incantations() {\r\n  if (!this.knowsAnyIncantations()) {\r\n    this.unknownCmd('incantations');\r\n    return false;\r\n  }\r\n\r\n  this.write(\"You have remembered the following incantations:\");\r\n  incantsList.forEach(inc => {\r\n    if (this.getFlag('G.' + inc.name.toUpperCase())) {\r\n      this.write(`\"${inc.name}\", ${inc.description}`);\r\n    }\r\n  });\r\n\r\n  this.write(\"You can evoke the magic of a Charm by typing \\\"incant [incantation]\\\".\")\r\n}","const sorter = (a, b) => a.slug < b.slug ? -1 : 1;\r\nconst mapper = item => '• ' + item.slug;\r\n\r\nexport default function listInventory() {\r\n  if (this.inventory.length) {\r\n    this.inventory = this.inventory.sort(sorter);\r\n\r\n    this.write(\"You check what you're carrying and find:\");\r\n\r\n    if (this.inventory.length <= 10) {\r\n      this.write(this.inventory.map(mapper).join('\\\\'));\r\n    } else {\r\n      let colLength = this.inventory.length / 2;\r\n\r\n      if (Math.floor(colLength) !== colLength) {\r\n        // Uneven cols. Add one so that first col has the extra.\r\n        colLength = Math.floor(colLength);\r\n        colLength++;\r\n      }\r\n\r\n      let invLines = [];\r\n\r\n      for (let i = 0; i < colLength; i++) {\r\n        let itemLeft = this.inventory[i];\r\n        let itemRight = this.inventory[i + colLength];\r\n        let str = mapper(itemLeft).padEnd(30, ' ');\r\n        if(itemRight) {\r\n          str += mapper(itemRight);\r\n        }\r\n        invLines.push(str);\r\n      }\r\n\r\n      this.write(\"#\" + invLines.join('\\\\') + \"#\");\r\n    }\r\n  } else {\r\n    this.write(\"You're not carrying anything.\");\r\n  }\r\n}","export default function look() {\r\n  this.text = '';\r\n\r\n  if (this.room.dark && !this.getFlag(\"G.HASLIGHT\")) {\r\n    this.write(\"^A Very Dark Place^\");\r\n    this.write(\"This place is so dark that you can't even see your hand in front of your face. Strange and terrible things make their homes in the dark. If you value your life, you should head back the way you came IMMEDIATELY and return with a light source.\\nIt is pitch black. You are likely to be eaten by a grue.\");\r\n  } else {\r\n    if (this.inventory.find(x => x.id === \"COMPASS\") && this.room.coords) {\r\n      this.write(`^${this.room.name} (${this.room.coords})^`);\r\n    } else {\r\n      this.write(`^${this.room.name}^`);\r\n    }\r\n\r\n    if (this.room.description) {\r\n      this.parseCmds(this.room.description);\r\n    }\r\n\r\n    if (this.room.look) {\r\n      this.parseCmds(this.room.look);\r\n    }\r\n\r\n    if (this.room.features) {\r\n      this.showFeatures(this.room.features);\r\n    }\r\n\r\n    if (this.getFlag(\"G.HASLIGHT\") && this.room.slug.indexOf('Memories/') === -1) {\r\n      this.write(\"Your flashlight is on.\");\r\n    }\r\n  }\r\n};","export default function move(dir) {\r\n  if (!this.room[dir]) {\r\n    this.write(\"You can't go that way.\");\r\n    return false;\r\n  }\r\n\r\n  this.lastMoveDir = dir;\r\n\r\n  this.parseCmds(this.room[dir]);\r\n};","export default function take (target) {\r\n  if (!target) {\r\n    this.write(\"Take what?\");\r\n  } else {\r\n    if (target.take) {\r\n      this.parseCmds(target.take, target);\r\n    } else {\r\n      this.write(\"You can't take that.\");\r\n    }\r\n  }\r\n};","export default function use(args) {\r\n  if (args === null) {\r\n    this.write(\"Use what on what?\");\r\n    return;\r\n  }\r\n\r\n  let matches = args.trim().match(\"(.+) on (.+)\");\r\n\r\n  if (!matches) {\r\n    matches = [args.trim()];\r\n  }\r\n\r\n  if (matches.length === 1) {\r\n    let obj = this.findTarget(matches[0]);\r\n    if(!obj) {\r\n      this.unknownTarget(matches[0]);\r\n      return;\r\n    } else if (obj && obj.use && obj.use[\"\"]) {\r\n      this.parseCmds(obj.use[\"\"]);\r\n      return;\r\n    } else {\r\n      this.write(\"It seems like you can't use that. Maybe try something else.\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (matches.length !== 3) {\r\n    this.write(\"Huh? Try \\\"use x on y\\\" instead.\");\r\n    return;\r\n  }\r\n\r\n  let item = this.findItem(matches[1]);\r\n\r\n  if (!item) {\r\n    this.write(`You don't have a ${matches[1]}.`);\r\n    return;\r\n  }\r\n\r\n  let target = this.findTarget(matches[2]);\r\n\r\n  if(!target) {\r\n    this.unknownTarget(matches[2]);\r\n    return;\r\n  }\r\n\r\n  if (!target.use || !target.use[item.id]) {\r\n    this.write(\"That's not going to work.\");\r\n    return;\r\n  }\r\n\r\n  this.parseCmds(target.use[item.id]);\r\n}","export default function addItem(id) {\r\n  let item = this.items.find(x => x.id === id);\r\n\r\n  if (!item) {\r\n    alert(`Item ${id} not found!`);\r\n    return;\r\n  }\r\n\r\n  // If this is the first time picking up this item,\r\n  // add it to the overall item count stat.\r\n  // (Only for non-tutorial items!)\r\n  if (id.indexOf('TUTORIAL') == -1 && !this.getFlag(`G.ITEM_PICKUP_${id}`)) {\r\n    this.setFlag(`G.ITEM_PICKUP_${id}`);\r\n    this.incVar('G.TOTAL_ITEMS_FOUND');\r\n    this.setVarValue('G.ITEMPERCENT',\r\n      Math.floor(\r\n        parseFloat(this.getVarValue('G.TOTAL_ITEMS_FOUND'), 10)\r\n        / parseFloat(this.items.filter(x => x.id.indexOf('TUTORIAL') === -1).length) * 100) + ' %'\r\n    );\r\n  }\r\n\r\n  this.inventory.push(Object.assign({}, item));\r\n};","export default function choice(repeatText, options, resolutionObj) {\r\n  this.choiceObj = {\r\n    repeat: repeatText,\r\n    options,\r\n    resolution: resolutionObj\r\n  };\r\n};","/// Calls a common function of the room's _common object.\r\nexport default function callCommon(name, roomSlug) {\r\n  let room = this.room;\r\n\r\n  if (roomSlug) {\r\n    room = this.rooms[roomSlug];\r\n  }\r\n\r\n  if (!room._common) {\r\n    return;\r\n  }\r\n\r\n  if (!room._common[name]) {\r\n    console.log(`Common not found: ${name}`);\r\n    return;\r\n  }\r\n\r\n  this.parseCmds(room._common[name]);\r\n}","export default function decVar(name, amount) {\r\n  this.setVarValue(name, parseInt((this.getVarValue(name)) || 0, 10) - parseInt((amount || 1), 10));\r\n}","export default function dialog(dialogObj) {\r\n  let args = this.userEntry;\r\n\r\n  if (args === null) {\r\n    this.write(\"Ask who about what?\");\r\n    return;\r\n  }\r\n\r\n  let matches = args.trim().match(\"ask (.+?) about (.+)\");\r\n\r\n  if (!matches || matches.length !== 3) {\r\n    this.write(\"Huh? Try \\\"ask x about y\\\" instead.\");\r\n    return;\r\n  }\r\n\r\n  let topic = matches[2];\r\n  let topicCmds = dialogObj[topic];\r\n\r\n  if (!topicCmds) {\r\n    let topicName = Object.keys(dialogObj)\r\n      .find(x => x.split('|')\r\n        .find(z => z.toLowerCase() === topic));\r\n    \r\n    if (topicName) {\r\n      topicCmds = dialogObj[topicName];\r\n    }\r\n  }\r\n\r\n  if (!topicCmds) {\r\n    this.parseCmds(dialogObj[\"\"]);\r\n    return;\r\n  }\r\n\r\n  this.parseCmds(topicCmds);\r\n}","export default function end(msg) {\r\n  this.text = '';\r\n  this.write(msg);\r\n  this.isEnd = true;\r\n  this.update();\r\n}","export default function gameOver(msg) {\r\n  this.text = msg;\r\n  this.isGameOver = true;\r\n  this.update();\r\n};","export default function ifFlag(name, trueCmds, falseCmds, feature) {\r\n  let value = this.getFlag(name);\r\n\r\n  if (value === true && trueCmds) {\r\n    this.parseCmds(trueCmds, feature);\r\n  } else if (value !== true && falseCmds) {\r\n    this.parseCmds(falseCmds, feature);\r\n  }\r\n};","export default function ifFlagWrite(flag, message) {\r\n  if (this.getFlag(flag)) {\r\n    this.write(message);\r\n  }\r\n}","export default function ifHasItem(id, trueCmds, falseCmds, feature) {\r\n  if (this.inventory.find(x => x.id === id)) {\r\n    this.parseCmds(trueCmds, feature);\r\n  } else {\r\n    this.parseCmds(falseCmds, feature);\r\n  }\r\n};","export default function ifRoom(slug, trueCmds, falseCmds, feature) {\r\n  if (slug === this.room.slug) {\r\n    this.parseCmds(trueCmds, feature);\r\n  } else if (falseCmds) {\r\n    this.parseCmds(falseCmds, feature);\r\n  }\r\n};","export default function ifVar(name, operator, compareValue, trueCmds, falseCmds, feature) {\r\n  let value = this.getVarValue(name);\r\n  let checkVal = compareValue;\r\n\r\n  if (typeof checkVal === 'number') {\r\n    if (typeof value === 'undefined') {\r\n      value = 0;\r\n    }\r\n  }\r\n\r\n  let checkVarName = getVarName(compareValue);\r\n  if (checkVarName) {\r\n    checkVal = this.getVarValue(checkVarName);\r\n  }\r\n\r\n  let checkResult = false;\r\n\r\n  switch (operator) {\r\n    case \"==\": checkResult = value == checkVal; break;\r\n    case \"===\": checkResult = value === checkVal; break;\r\n    case \">\": checkResult = value > checkVal; break;\r\n    case \">=\": checkResult = value >= checkVal; break;\r\n    case \"<\": checkResult = value < checkVal; break;\r\n    case \"<=\": checkResult = value <= checkVal; break;\r\n    default: this.write(\"Invalid operator!\"); break;\r\n  }\r\n\r\n  if (checkResult && trueCmds) {\r\n    this.parseCmds(trueCmds, feature);\r\n  } else if (!checkResult && falseCmds) {\r\n    this.parseCmds(falseCmds, feature);\r\n  }\r\n};\r\n\r\nfunction getVarName(compareValue) {\r\n  // Check if it's \"{example}\". If so,\r\n  // get the value of the \"example\" variable.\r\n  let varMatches = compareValue.toString().match(/^\\$(.+?)\\$$/);\r\n  if (varMatches && varMatches.length === 2) {\r\n    return varMatches[1];\r\n  }\r\n}","export default function incVar(name, amount) {\r\n  this.setVarValue(name, parseInt(this.getVarValue(name) || 0, 10) + parseInt(amount || 1, 10));\r\n}","export default function invokeRoom(cmdName) {\r\n  this.parseCmds(this.room[cmdName]);\r\n};","export default function ifIsIn(args) {\r\n  if (!args.length || args.length !== 4) {\r\n    return;\r\n  }\r\n\r\n  let val = this.getVarValue(args[0]);\r\n\r\n  let match = args[1].map((x, ix) => ({ val: x, ix })).find(x => x.val == val);\r\n\r\n  if (match) {\r\n    this.parseCmds(args[2]);\r\n  } else {\r\n    this.parseCmds(args[3]);\r\n  }\r\n}","export default function pickOne(args) {\r\n  this.parseCmds(args[Math.floor(Math.random() * args.length)]);\r\n}","export default function removeItem(id) {\r\n  this.inventory = this.inventory.filter(x => x.id !== id);\r\n};","export default function saveGame() {\r\n  let savedGame = JSON.stringify(\r\n    Object.assign(\r\n      {},\r\n      {\r\n        options: this.options,\r\n        inventory: this.inventory.map(x => x.id),\r\n        roomVars: this.roomVars,\r\n        globalVars: this.globalVars,\r\n        currRoomSlug: this.room.slug,\r\n      }\r\n    )\r\n  );\r\n\r\n  localStorage.setItem(\"game_state\", savedGame);\r\n};","export default function setFlag(name) {\r\n  this.setVarValue(name, true);\r\n}","export default function switchBranch(args) {\r\n  if (!args.length || args.length !== 2) {\r\n    return;\r\n  }\r\n\r\n  let val = this.getVarValue(args[0]);\r\n\r\n  if (args[1][val]) {\r\n    this.parseCmds(args[1][val]);\r\n  }\r\n}","export default function unsetFlag(name) {\r\n  this.setVarValue(name, false);\r\n}","export default function waitForInput(args) {\r\n  if (!args || !args.length) {\r\n    console.log(\"Invalid args sent to waitForInput!\");\r\n    return;\r\n  }\r\n  \r\n  this.waitCmds = args;\r\n\r\n  this.write(\"+Press enter to continue...+\");\r\n}","export default function write(msg) {\r\n  let wc = this.writeCapturing;\r\n\r\n  if (wc) {\r\n    this.capturedText = \"\\n\" + msg;\r\n  } else {\r\n    this.text += \"\\n\" + msg;\r\n  }\r\n\r\n  if (wc) {\r\n    this.capturedText = addHints(replaceVariables(replaceNotices(this.capturedText, this), this), this).replace(/%%/g, \"%\");\r\n  } else {\r\n    this.text = addHints(replaceVariables(replaceNotices(this.text, this), this), this).replace(/%%/g, \"%\");\r\n  }\r\n\r\n  if (!wc) {\r\n    let paragraphs = this.text.split(\"\\n\");\r\n\r\n    if (paragraphs.length > 30) {\r\n      this.text = paragraphs.slice(paragraphs.length - 30).join('\\n');\r\n    }\r\n  }\r\n\r\n  this.updateScroll();\r\n  this.update();\r\n};\r\n\r\nfunction replaceNotices(haystack, gameState) {\r\n  return haystack.replace(/{(.+?)}/g, (_, p1) => {\r\n    let feat = gameState.getFeature(p1);\r\n\r\n    if (feat) {\r\n      gameState.writeCapturing = true;\r\n      gameState.parseCmds(feat.notice);\r\n      gameState.writeCapturing = false;\r\n      if (gameState.capturedText) {\r\n        return gameState.capturedText.replace('\\n', '');\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n    return '';\r\n  });\r\n}\r\n\r\nfunction replaceVariables(haystack, gameState) {\r\n  return haystack.replace(/\\$(.+?)\\$/g, (_, varName) => {\r\n    let val = gameState.getVarValue(varName);\r\n    if (val === undefined || val === null) {\r\n      return '';\r\n    }\r\n    return val;\r\n  });\r\n}\r\n\r\nfunction addHints(msg, gameState) {\r\n  if (gameState.options.showHints\r\n    && !msg.match(/^\\^.+?\\^$/)) {\r\n    let hintMsg = msg;\r\n\r\n    (gameState.room.features || []).forEach(x => {\r\n      let slugs = [];\r\n      x.slug.split('|').forEach(z => slugs.push(z));\r\n      if (x.altSlugs) {\r\n        slugs = slugs.concat(x.altSlugs);\r\n      }\r\n\r\n      slugs.forEach(slug => {\r\n        hintMsg = hintMsg.replace(new RegExp(\"\\\\b\" + slug + \"\\\\b\", 'gi'), (match) => {\r\n          return '%' + match + '%';\r\n        });\r\n      });\r\n    });\r\n\r\n    return hintMsg;\r\n  } else {\r\n    return msg;\r\n  }\r\n}","export default function writeRoomCoords() {\r\n  this.write(this.room.coords);\r\n}","export default function findItem(slug) {\r\n  return this.inventory.find(x => x.slug === slug || (x.altSlugs && x.altSlugs.indexOf(slug) > -1));\r\n}","export default function findTarget(slug) {\r\n  let roomFeature = (this.room.features || []).find(x => {\r\n    // Check to ensure that it's not destroyed.\r\n    if (!this.getFeature(x.slug)) {\r\n      return false;\r\n    }\r\n\r\n    if (x.slug.toLowerCase() === slug || (x.altSlugs && x.altSlugs.map(z => z.toLowerCase()).indexOf(slug) > -1)) {\r\n      if (x.targetFlag) {\r\n        if (this.getFlag(x.targetFlag)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  if (roomFeature) {\r\n    return roomFeature;\r\n  }\r\n\r\n  let invItem = this.inventory.find(x => x.slug.toLowerCase() === slug || (x.altSlugs && x.altSlugs.map(z => z.toLowerCase()).indexOf(slug) > -1));\r\n\r\n  return invItem;\r\n};","export default function getFeature(slug) {\r\n  return (this.room.features || []).find(x => x.slug === slug\r\n    && (!x.destroyedFlag || !this.getFlag(x.destroyedFlag)));\r\n};","export default function getFlag(name) {\r\n\r\n  const getFlagValue = (fName) => {\r\n    if (fName.indexOf('!') === 0) {\r\n      let flagName = fName.substring(1);\r\n      return !this.getVarValue(flagName);\r\n    } else {\r\n      return this.getVarValue(fName);\r\n    }\r\n  }\r\n\r\n  if (name.indexOf('&') > -1) {\r\n    // Only return true if none of the flags are false.\r\n    return name.split('&').filter(f => !getFlagValue(f)).length === 0;\r\n  } else if(name.indexOf('|') > -1) {\r\n    // Return true if any of the flags are true.\r\n    return name.split('|').filter(f => !!getFlagValue(f)).length > 0;\r\n  } else {\r\n    return getFlagValue(name);\r\n  }\r\n}\r\n\r\n","export default function getLocalVars() {\r\n  if (!this.roomVars[this.room.name]) {\r\n    this.roomVars[this.room.name] = {};\r\n  }\r\n\r\n  return this.roomVars[this.room.name];\r\n};","import * as rooms from \"../Rooms/room-index.js\";\r\n\r\nexport default function () {\r\n  let dict = {};\r\n  Object.keys(rooms).forEach(prop => {\r\n    let r = rooms[prop];\r\n    dict[r.slug] = r;\r\n  });\r\n\r\n  return dict;\r\n}","export default function getVarValue(name) {\r\n  if (name.startsWith('G.')) {\r\n    return this.globalVars[name];\r\n  } else {\r\n    return this.getLocalVars()[name];\r\n  }\r\n}","export default function handleChoiceInput(entry) {\r\n  if (\r\n    this.choiceObj.options\r\n      .map(x => x.toLowerCase())\r\n      .indexOf(entry.toLowerCase()) === -1\r\n  ) {\r\n    this.parseCmds(this.choiceObj.repeat);\r\n    return;\r\n  }\r\n  let resolutionPath = this.choiceObj.resolution[entry.toLowerCase()];\r\n  this.choiceObj = null;\r\n  this.parseCmds(resolutionPath);\r\n};","const oppositeDirs = {\r\n  \"north\": \"south\",\r\n  \"south\": \"north\",\r\n  \"east\": \"west\",\r\n  \"west\": \"east\",\r\n  \"up\": \"down\",\r\n  \"down\": \"up\"\r\n}\r\n\r\nexport default function handleDarkRoom(cmd, args) {\r\n  if (this.room.dark && !this.getFlag(\"G.HASLIGHT\")) {\r\n    // Player is in a dark room without a light source.\r\n    // If they neither activated a light source nor\r\n    // left the way they came, a grue eats them.\r\n    if (oppositeDirs[cmd] && oppositeDirs[cmd] === this.lastMoveDir) {\r\n      return true;\r\n    }\r\n\r\n    if (cmd === \"use\"\r\n      && args.length === 1) {\r\n      let invItem = this.findItem(args[0]);\r\n      if (invItem && invItem.id === \"FLASHLIGHT\") {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    this.parseStringCmd(\"gameOver|You fumble around in the dark for a few moments. You think you hear something so you immediately stop what you're doing, ears attuned to the silence all around you. Did you really hear something or are your ears playing tricks on you? Your question is answered only a few seconds later. The sound of slapping feet approaches, its direction indeterminate!\\nClaws dig into your flesh and something large and leathery wraps long, spindly arms around you. You struggle to free yourself but the its strength far, far, surpasses your own. You let out a scream as it bites down on your neck.\\nYou should fear the dark...\");\r\n\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}","export default function handleDevCmd(str) {\r\n  if (str.startsWith('setFlag')) {\r\n    let flagName = str.split('|')[1];\r\n    this.setFlag(flagName);\r\n    this.write(`~Set ${flagName} to true.~`);\r\n  } else if (str.startsWith('unsetFlag')) {\r\n    let flagName = str.split('|')[1];\r\n    this.unsetFlag(flagName);\r\n    this.write(`~Set ${flagName} to false.~`);\r\n  } else if (str.startsWith('addItem')) {\r\n    let itemId = str.split('|')[1];\r\n    this.addItem(itemId);\r\n    this.write(`~Added ${itemId} to inventory.~`);\r\n  } else if (str.startsWith('removeItem')) {\r\n    let itemId = str.split('|')[1];\r\n    this.removeItem(itemId);\r\n    this.write(`~Removed ${itemId} from inventory.~`);\r\n  } else if (str === 'saveGame') {\r\n    this.saveGame();\r\n    this.write('~Game Saved~');\r\n  } else if (str.startsWith('getVar')) {\r\n    let varName = str.split('|')[1];\r\n    this.write(`~${this.getVarValue(varName)}~`);\r\n  } else if(str.startsWith('incVar')) {\r\n    let varName = str.split('|')[1];\r\n    this.incVar(varName);\r\n    this.write(`~Incremented ${varName}~`);\r\n  } else if(str.startsWith('decVar')) {\r\n    let varName = str.split('|')[1];\r\n    this.decVar(varName);\r\n    this.write(`~Decremented ${varName}~`);\r\n  } else if(str.startsWith('loadRoom')) {\r\n    let varName = str.split('|')[1];\r\n    this.loadRoom(varName);\r\n  } else if (str.startsWith('cleanInventory')) {\r\n    this.inventory = this.inventory.filter(x => !!x && x.slug);\r\n    this.write(\"~Cleaned inventory of undefined objects~\");\r\n  } else if(str.startsWith('addAllItems')) {\r\n    this.inventory = [...this.items];\r\n    this.write(\"~Added all items to inventory.~\");\r\n  } else if(str.startsWith('clearInventory')) {\r\n    this.inventory = [];\r\n    this.write(\"~Remove all items from inventory.~\");\r\n  } else if(str.startsWith('learnAllIncants')) {\r\n    this.setFlag(\"G.ETAVONER\");\r\n    this.setFlag(\"G.ELTNAMSID\");\r\n    this.setFlag(\"G.LIEVNU\");\r\n    this.setFlag(\"G.HSINIMID\");\r\n    this.setFlag(\"G.PARTNE\");\r\n    this.setFlag(\"G.ETALOSI\");\r\n    this.setFlag(\"G.ROHCNA\");\r\n\r\n    this.write(\"~Learned all incantations~\");\r\n  }\r\n}","const shortcuts = {\r\n  \"n\": \"north\",\r\n  \"s\": \"south\",\r\n  \"e\": \"east\",\r\n  \"w\": \"west\",\r\n  \"u\": \"up\",\r\n  \"d\": \"down\",\r\n  \"cl\": \"clear\",\r\n  \"l\": \"look\",\r\n  \"t\": \"take\",\r\n  \"i\": \"inventory\"\r\n}\r\n\r\nexport default function handleUserEntry(entry) {\r\n  if (entry.startsWith('dev|')) {\r\n    this.handleDevCmd(entry.replace('dev|', ''));\r\n    return;\r\n  }\r\n\r\n  this.userEntry = entry;\r\n\r\n  this.capturedText = '';\r\n\r\n  if (this.waitCmds) {\r\n    let oldWaitCmds = this.waitCmds;\r\n    this.parseCmds(this.waitCmds);\r\n    if (oldWaitCmds == this.waitCmds) {\r\n      this.waitCmds = null;\r\n    }\r\n    return;\r\n  } else if (!entry) {\r\n    return;\r\n  }\r\n\r\n  this.write(`~${entry}~`);\r\n\r\n  if (this.choiceObj) {\r\n    this.handleChoiceInput(entry);\r\n    return;\r\n  }\r\n\r\n  let chunks = entry\r\n    .toLowerCase()\r\n    .split(/ (.+)/)\r\n    .filter(x => x);\r\n  let cmd = chunks[0];\r\n  let args = chunks.filter((_, ix) => ix > 0);\r\n  let target = null;\r\n\r\n  // Replace common verbs with their engine equivalent\r\n  if (cmd === \"talk\") {\r\n    cmd = \"greet\";\r\n  } else if (cmd === \"put\") {\r\n    let putMatches = entry.match(/put (.+?) (in|on) (.+)/);\r\n    if(putMatches) {\r\n      cmd = \"use\";\r\n      args[0] = putMatches[1] + \" on \" + putMatches[3];\r\n    }\r\n  }\r\n\r\n  if (!this.allowedVerbs.find(x => x === cmd)) {\r\n    this.unknownCmd(cmd);\r\n    return;\r\n  }\r\n\r\n  // Convert shortcuts to full words to match with properties.\r\n  if (shortcuts[cmd]) {\r\n    cmd = shortcuts[cmd];\r\n  }\r\n\r\n  // Handle input in a darkened room.\r\n  if(!this.handleDarkRoom(cmd, args)) {\r\n    return;\r\n  }\r\n\r\n  // Special cases for 4-word commands and others.\r\n  switch (cmd) {\r\n    case \"ask\":\r\n      this.ask(args.length > 0 ? args[0] : null);\r\n      return;\r\n    case \"combine\":\r\n      this.combine(args.length > 0 ? args[0] : null);\r\n      return;\r\n    case \"use\":\r\n      this.use(args.length > 0 ? args[0] : null);\r\n      return;\r\n    case \"give\":\r\n      this.give(args.length > 0 ? args[0] : null);\r\n      return;\r\n    case \"incant\":\r\n      this.incant(args.length > 0 ? args[0] : null);\r\n      return;\r\n  }\r\n\r\n  if (args.length > 0) {\r\n    target = this.findTarget(args[0]);\r\n    if (!target) {\r\n      this.unknownTarget(args[0]);\r\n      return;\r\n    }\r\n  }\r\n\r\n  // If targeting something and that something has the command in it, run those commands.\r\n  if (target) {\r\n    if (target[cmd]) {\r\n      this.parseCmds(target[cmd], target);\r\n    } else {\r\n      let propKey = Object.keys(target).find(x => x.split('|').indexOf(cmd) > -1);\r\n      if (propKey) {\r\n        this.parseCmds(target[propKey], target);\r\n      } else {\r\n        this.write(`You can't ${cmd} that.`);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  switch (cmd) {\r\n    case \"look\":\r\n      // Look needs to be checked here because if there is no\r\n      // target, it should run the look command without one.\r\n      this.look();\r\n      break;\r\n    case \"inventory\":\r\n      this.listInventory();\r\n      break\r\n    case \"incantations\":\r\n      this.incantations();\r\n      break;\r\n    case \"north\":\r\n    case \"south\":\r\n    case \"east\":\r\n    case \"west\":\r\n    case \"up\":\r\n    case \"down\":\r\n      this.move(cmd);\r\n      break;\r\n    case \"clear\":\r\n      this.clear();\r\n      break;\r\n    case \"stand\":\r\n      if (this.room.stand) {\r\n        this.parseCmds(this.room.stand);\r\n      }\r\n      break;\r\n    case \"sit\":\r\n      this.write(\"What do you want to sit on?\");\r\n      break;\r\n    default:\r\n      this.write(\"What do you want to \" + cmd + \"?\");\r\n      break;\r\n  }\r\n};","import incantations from \"../incantations.json\";\r\n\r\nexport default function knowsAnyIncantations() {\r\n  return incantations.some(x => this.getFlag('G.' + x.name.toUpperCase()));\r\n}","export default function loadRoom (slug) {\r\n  if (!this.rooms[slug]) {\r\n    alert(`Room '${slug}' not found!`);\r\n    return;\r\n  }\r\n\r\n  this.room = this.rooms[slug];\r\n\r\n  this.look();\r\n\r\n  if (this.room.load) {\r\n    this.parseCmds(this.room.load);\r\n  }\r\n};","export default function parseCmds(cmds, feature) {\r\n  let bail = false;\r\n\r\n  if(!cmds) {\r\n    return;\r\n  }\r\n\r\n  if (typeof cmds === \"string\") {\r\n    this.parseStringCmd(cmds, feature);\r\n    return;\r\n  }\r\n\r\n  cmds.forEach(cmd => {\r\n    if (bail) {\r\n      return;\r\n    }\r\n\r\n    if (typeof cmd === \"string\") {\r\n      if (!this.parseStringCmd(cmd, feature)) {\r\n        bail = true;\r\n      }\r\n      this.update();\r\n      return;\r\n    }\r\n\r\n    switch (cmd.cmd) {\r\n      case \"write\":\r\n        this.write.apply(this, cmd.args);\r\n        break;\r\n      case \"ifFlag\":\r\n        this.ifFlag.apply(this, [...cmd.args, feature]);\r\n        break;\r\n      case \"ifHasItem\":\r\n        this.ifHasItem.apply(this, [...cmd.args, feature]);\r\n        break;\r\n      case \"ifVar\":\r\n        this.ifVar.apply(this, [...cmd.args, feature]);\r\n        break;\r\n      case \"addItem\":\r\n        this.addItem.apply(this, cmd.args);\r\n        break;\r\n      case \"removeItem\":\r\n        this.removeItem.apply(this, cmd.args);\r\n        break;\r\n      case \"destroyFeature\":\r\n        this.destroyFeature.apply(this, cmd.args);\r\n        break;\r\n      case \"ifRoom\":\r\n        this.ifRoom.apply(this, cmd.args);\r\n        break;\r\n      case \"choice\":\r\n        this.choice.apply(this, cmd.args);\r\n        break;\r\n      case \"waitForInput\":\r\n        this.waitForInput(cmd.args);\r\n        break;\r\n      case \"dialog\":\r\n        this.dialog(cmd.args);\r\n        break;\r\n      case \"pickOne\":\r\n        this.pickOne(cmd.args);\r\n        break;\r\n      case \"switchBranch\":\r\n        this.switchBranch(cmd.args);\r\n        break;\r\n      case \"ifIsIn\":\r\n        this.ifIsIn(cmd.args);\r\n        break;\r\n    }\r\n\r\n    this.update();\r\n  });\r\n};","const singleWordCmds = [\r\n  \"saveGame\",\r\n  \"look\",\r\n  \"writeRoomCoords\"\r\n]\r\n\r\nexport default function parseStringCmd(cmd) {\r\n  let chunks = cmd.split(\"|\");\r\n\r\n  if (chunks.length > 1 || singleWordCmds.indexOf(cmd) > -1) {\r\n    // First part is a command!\r\n    let func = this[chunks[0]];\r\n    if (func) {\r\n      // Invoke the function.\r\n      func.apply(this, chunks.filter((_, ix) => ix > 0));\r\n      return true;\r\n    } else {\r\n      alert(\"unknown function: \" + chunks[0]);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  this.write(cmd);\r\n  return true;\r\n};","export default function setVarValue(name, value) {\r\n  if (name.startsWith('G.')) {\r\n    this.globalVars[name] = value;\r\n  } else {\r\n    this.getLocalVars()[name] = value;\r\n  }\r\n}","export default function showFeatures(features) {\r\n  features.filter(x => {\r\n    if (!x.roomDesc) {\r\n      return false;\r\n    }\r\n\r\n    if (x.destroyedFlag) {\r\n      if (this.getFlag(x.destroyedFlag)) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }).forEach(f => {\r\n    this.parseCmds(f.roomDesc);\r\n  });\r\n};","const unknownMsgs = [\r\n  \"Huh?\",\r\n  \"What?\",\r\n  \"You don't know how to {cmd}.\",\r\n  \"{cmd}?! You have no idea!\",\r\n  \"What's {cmd} mean?\",\r\n  \"You're not sure you really want to {cmd}...\",\r\n  \"You can't {cmd}.\",\r\n  \"{cmd} isn't a thing. Stop trying to make it a thing.\"\r\n];\r\n\r\nexport default function unknownCmd(cmd) {\r\n  if (cmd.match(/\".+?\"/)) {\r\n    this.write(`Hmm... Try typing that again without the quotes around it.`);\r\n    return;\r\n  }\r\n\r\n  let msg = unknownMsgs[Math.floor(Math.random()*unknownMsgs.length)];\r\n  msg = msg.replace(/{cmd}/g, cmd);\r\n  this.write(msg);\r\n};","// Also a script command.\r\n// unknownTarget:nameOfTarget\r\nexport default function unknownTarget(target) {\r\n  this.write(`You don't see ${target} anywhere.`);\r\n};","import verbs from \"../verbs.json\";\r\nimport items from \"../items.json\";\r\n\r\n// Import user commands.\r\nimport ask from \"../Commands/ask.js\";\r\nimport clear from \"../Commands/clear.js\";\r\nimport combine from \"../Commands/combine.js\";\r\nimport give from \"../Commands/give.js\";\r\nimport incant from \"../Commands/incant.js\";\r\nimport incantations from \"../Commands/incantations.js\";\r\nimport listInventory from \"../Commands/listInventory.js\";\r\nimport look from \"../Commands/look.js\";\r\nimport move from \"../Commands/move.js\";\r\nimport take from \"../Commands/take.js\";\r\nimport use from \"../Commands/use.js\";\r\n\r\n// Import script commands.\r\nimport addItem from \"../ScriptCommands/addItem.js\";\r\nimport choice from \"../ScriptCommands/choice.js\";\r\nimport callCommon from \"../ScriptCommands/callCommon.js\";\r\nimport decVar from \"../ScriptCommands/decVar.js\";\r\nimport dialog from \"../ScriptCommands/dialog.js\";\r\nimport end from \"../ScriptCommands/end.js\";\r\nimport gameOver from \"../ScriptCommands/gameOver.js\";\r\nimport ifFlag from \"../ScriptCommands/ifFlag.js\";\r\nimport ifFlagWrite from \"../ScriptCommands/ifFlagWrite.js\";\r\nimport ifHasItem from \"../ScriptCommands/ifHasItem.js\";\r\nimport ifRoom from \"../ScriptCommands/ifRoom.js\";\r\nimport ifVar from \"../ScriptCommands/ifVar.js\";\r\nimport incVar from \"../ScriptCommands/incVar.js\";\r\nimport invokeRoom from \"../ScriptCommands/invokeRoom.js\";\r\nimport ifIsIn from \"../ScriptCommands/ifIsIn.js\";\r\nimport pickOne from \"../ScriptCommands/pickOne.js\";\r\nimport removeItem from \"../ScriptCommands/removeItem.js\";\r\nimport saveGame from \"../ScriptCommands/saveGame.js\";\r\nimport setFlag from \"../ScriptCommands/setFlag.js\";\r\nimport switchBranch from \"../ScriptCommands/switchBranch.js\";\r\nimport unsetFlag from \"../ScriptCommands/unsetFlag.js\";\r\nimport waitForInput from \"../ScriptCommands/waitForInput.js\";\r\nimport write from \"../ScriptCommands/write.js\";\r\nimport writeRoomCoords from \"../ScriptCommands/writeRoomCoords.js\";\r\n\r\n// Import helper functions\r\nimport findItem from \"./findItem.js\";\r\nimport findTarget from \"./findTarget.js\";\r\nimport getFeature from \"./getFeature.js\";\r\nimport getFlag from \"./getFlag.js\";\r\nimport getLocalVars from \"./getLocalVars.js\";\r\nimport getRoomDictionary from \"./getRoomDictionary.js\";\r\nimport getVarValue from \"./getVarValue.js\";\r\nimport handleChoiceInput from \"./handleChoiceInput.js\";\r\nimport handleDarkRoom from \"./handleDarkRoom.js\";\r\nimport handleDevCmd from \"./handleDevCmd.js\";\r\nimport handleUserEntry from \"./handleUserEntry.js\";\r\nimport knowsAnyIncantations from \"./knowsAnyIncantations.js\";\r\nimport loadRoom from \"../ScriptCommands/loadRoom.js\";\r\nimport parseCmds from \"./parseCmds.js\";\r\nimport parseStringCmd from \"./parseStringCmd.js\";\r\nimport setVarValue from \"./setVarValue.js\";\r\nimport showFeatures from \"./showFeatures.js\";\r\nimport unknownCmd from \"../Helpers/unknownCmd.js\";\r\nimport unknownTarget from \"./unknownTarget.js\";\r\n\r\nexport default function getGameState(loadGame, updateScroll, update) {\r\n  let gameState = {\r\n    // Options for the game.\r\n    options: {\r\n      // Determines whether or not to highlight interactable words.\r\n      showHints: false,\r\n    },\r\n    // The player's current inventory of items.\r\n    inventory: [],\r\n    // Variables that are isolated by room.\r\n    roomVars: {},\r\n    // Variables that are global to the entire game.\r\n    globalVars: {},\r\n    // The database of rooms.\r\n    rooms: getRoomDictionary(),\r\n    // Whether or not the game has reached its end.\r\n    isEnd: false,\r\n    // Whether or not the game is in a game over state.\r\n    isGameOver: false,\r\n    // The current room.\r\n    room: null,\r\n    // The current text being outputted to the screen.\r\n    text: '',\r\n    // The list of allowed verbs the player can type.\r\n    allowedVerbs: verbs,\r\n    // The database of items.\r\n    items,\r\n    // The current depth of write capturing (0 means output to screen).\r\n    writeCapturing: 0,\r\n    // The cmds to process after user input.\r\n    waitCmds: null,\r\n    // The current user entry.\r\n    userEntry: null,\r\n    // The last direction command entered by the user that caused a room load.\r\n    lastMoveDir: null,\r\n\r\n    // User Commands\r\n    ask,\r\n    clear,\r\n    combine,\r\n    give,\r\n    incant,\r\n    incantations,\r\n    listInventory,\r\n    move,\r\n    take,\r\n    use,\r\n\r\n    // Script Commands\r\n    addItem,\r\n    choice,\r\n    callCommon,\r\n    decVar,\r\n    dialog,\r\n    end,\r\n    gameOver,\r\n    ifFlag,\r\n    ifFlagWrite,\r\n    ifHasItem,\r\n    ifRoom,\r\n    ifVar,\r\n    incVar,\r\n    invokeRoom,\r\n    ifIsIn,\r\n    pickOne,\r\n    removeItem,\r\n    saveGame,\r\n    setFlag,\r\n    switchBranch,\r\n    unsetFlag,\r\n    waitForInput,\r\n    write,\r\n    writeRoomCoords,\r\n\r\n    // Helpers\r\n    findItem,\r\n    findTarget,\r\n    getFeature,\r\n    getFlag,\r\n    getLocalVars,\r\n    getVarValue,\r\n    handleChoiceInput,\r\n    handleDarkRoom,\r\n    handleDevCmd,\r\n    handleUserEntry,\r\n    knowsAnyIncantations,\r\n    loadRoom,\r\n    look,\r\n    parseCmds,\r\n    parseStringCmd,\r\n    setVarValue,\r\n    showFeatures,\r\n    unknownCmd,\r\n    unknownTarget,\r\n    update,\r\n    updateScroll,\r\n  };\r\n\r\n  let savedGame = null;\r\n  if (loadGame) {\r\n    savedGame = localStorage.getItem('game_state');\r\n    if (savedGame) {\r\n      savedGame = JSON.parse(savedGame);\r\n      if (savedGame) {\r\n        let currRoomSlug = savedGame.currRoomSlug;\r\n        let inv = savedGame.inventory;\r\n        delete savedGame.inventory;\r\n        delete savedGame.currRoomSlug;\r\n        Object.assign(gameState, savedGame);\r\n\r\n        inv.forEach(x => {\r\n          let item = null;\r\n          if (typeof (x) === 'string') {\r\n            item = items.find(item => item.id === x);\r\n          } else if (typeof (x) === 'object') {\r\n            item = items.find(item => item.id === x.id);\r\n          }\r\n          \r\n          if (item) {\r\n            gameState.inventory.push(item);\r\n          }\r\n        });\r\n\r\n        gameState.loadRoom(currRoomSlug);\r\n      }\r\n    }\r\n  }\r\n\r\n  return gameState;\r\n}","<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n  export let coords = \"\";\r\n  export let hasCompass = false;\r\n  export let isDark = false;\r\n  export let isLightOn = false;\r\n  export let exits = [];\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function travel(dir) {\r\n    dispatch(\"travel\", { direction: dir });\r\n  }\r\n\r\n  $: coordsNum = coords ? coords.split(\" \")[1] : undefined;\r\n  $: coordsXY =\r\n    coordsNum && coordsNum !== \"???\"\r\n      ? [coordsNum[0], Number(coordsNum[1])]\r\n      : undefined;\r\n\r\n  const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"];\r\n  const rows = [0, 1, 2, 3, 4, 5, 6];\r\n</script>\r\n\r\n<style>\r\n  .location {\r\n    z-index: 1;\r\n    position: relative;\r\n    box-shadow: 0 0 10em #222;\r\n    background-color: #222;\r\n    padding: 1em;\r\n    flex: none;\r\n    overflow: auto;\r\n    align-self: flex-start;\r\n    font-size: 0.85em;\r\n    width: 270px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1em;\r\n    align-items: center;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .location {\r\n      flex: auto;\r\n      align-self: stretch;\r\n      width: auto;\r\n    }\r\n  }\r\n\r\n  h4 {\r\n    margin: 0;\r\n  }\r\n\r\n  .room {\r\n    width: 5em;\r\n    height: 5em;\r\n    border: 1px gray solid;\r\n    margin: 1em;\r\n    position: relative;\r\n  }\r\n\r\n  .exit {\r\n    position: absolute;\r\n    width: 1em;\r\n    height: 1em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .exit:hover {\r\n    color: white;\r\n  }\r\n\r\n  .north {\r\n    top: -1.25em;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .north::after {\r\n    content: \"🡅\";\r\n  }\r\n\r\n  .south {\r\n    bottom: -1.25em;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .south::after {\r\n    content: \"🡇\";\r\n  }\r\n\r\n  .east {\r\n    right: -1.25em;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  .east::after {\r\n    content: \"🡆\";\r\n  }\r\n\r\n  .west {\r\n    left: -1.25em;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  .west::after {\r\n    content: \"🡄\";\r\n  }\r\n\r\n  .up {\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-100%, -50%);\r\n  }\r\n\r\n  .up::after {\r\n    content: \"🠕\";\r\n  }\r\n\r\n  .down {\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(100%, -50%);\r\n  }\r\n\r\n  .down::after {\r\n    content: \"🠗\";\r\n  }\r\n\r\n  table {\r\n    border-spacing: 2px;\r\n    margin: 0;\r\n  }\r\n\r\n  td {\r\n    background-color: rgb(87, 87, 87);\r\n    width: 0.5em;\r\n    height: 0.5em;\r\n  }\r\n\r\n  td.active {\r\n    background-color: white;\r\n  }\r\n</style>\r\n\r\n{#if coords}\r\n  <div class=\"location\">\r\n    {#if isDark && !isLightOn}\r\n      A Dark and Terrible Place...\r\n    {:else}\r\n      {#if hasCompass}\r\n        <h4>{coords}</h4>\r\n      {:else}\r\n        <h4>{coords.substring(0, coords.indexOf(' '))}</h4>\r\n      {/if}\r\n      <div class=\"room\">\r\n        {#each exits as exit}\r\n          <div class=\"exit {exit}\" on:click={() => travel(exit)} title={exit} />\r\n        {/each}\r\n      </div>\r\n    {/if}\r\n\r\n    {#if coordsXY && hasCompass}\r\n      <table class=\"map\">\r\n        {#each rows as num}\r\n          <tr>\r\n            {#each letters as letter}\r\n              <td\r\n                class={coordsXY[0] === letter && coordsXY[1] - 1 === num ? 'active' : ''} />\r\n            {/each}\r\n          </tr>\r\n        {/each}\r\n      </table>\r\n    {/if}\r\n  </div>\r\n{/if}\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import Commands from \"./Commands.svelte\";\r\n  import Help from \"./Help.svelte\";\r\n  import getGameState from \"./Helpers/getGameState.js\";\r\n  import Location from \"./Location.svelte\";\r\n  import config from \"./config.json\";\r\n\r\n  function getRoomExits(gameState) {\r\n    if (!gameState\r\n    || !gameState.room) {\r\n      return [];\r\n    }\r\n\r\n    let room = gameState.room;\r\n    let exits = [];\r\n\r\n    exits.push(room.north && (!room.northFlag || gameState.getFlag(room.northFlag)) ? \"north\" : undefined);\r\n    exits.push(room.south && (!room.southFlag || gameState.getFlag(room.southFlag)) ? \"south\" : undefined);\r\n    exits.push(room.east && (!room.eastFlag || gameState.getFlag(room.eastFlag)) ? \"east\" : undefined);\r\n    exits.push(room.west && (!room.westFlag || gameState.getFlag(room.westFlag)) ? \"west\" : undefined);\r\n    exits.push(room.up && (!room.upFlag || gameState.getFlag(room.upFlag)) ? \"up\" : undefined);\r\n    exits.push(room.down && (!room.downFlag || gameState.getFlag(room.downFlag)) ? \"down\" : undefined);\r\n\r\n    return exits.filter(x => x);\r\n  }\r\n\r\n  export let loadGame = false;\r\n\r\n  let gs;\r\n  let previousInputs = [];\r\n  let cmdIx = -1;\r\n  let output = null;\r\n  let isMiniSideMenuOpen = false;\r\n  $: gameState = gs;\r\n  $: hasCompass = gameState\r\n    ? gameState.inventory.some(x => x.id === \"COMPASS\")\r\n    : false;\r\n  $: knowsAnyIncantations = gameState\r\n    ? gameState.knowsAnyIncantations()\r\n    : false;\r\n  $: coords = gameState && gameState.room && gameState.room.coords ? gameState.room.coords : \"\";\r\n  $: exits = getRoomExits(gameState);\r\n  $: isDark = gameState && gameState.room ? gameState.room.dark : false;\r\n  $: isLightOn = gameState && gameState.getFlag(\"G.HASLIGHT\");\r\n\r\n  let helpVisible = false;\r\n\r\n  let entry = \"\";\r\n\r\n  onMount(async () => {\r\n    gs = getGameState(\r\n      loadGame,\r\n      () =>\r\n        window.setTimeout(\r\n          () => (output.scrollTop = output.scrollHeight + output.offsetTop),\r\n          1\r\n        ),\r\n      function() {\r\n        gameState = gameState;\r\n      }\r\n    );\r\n\r\n    if (!loadGame) {\r\n      await gs.loadRoom(config.initial_room);\r\n    }\r\n  });\r\n\r\n  const focus = el => {\r\n    el.focus();\r\n  };\r\n\r\n  const keydown = ({ keyCode }) => {\r\n    if (keyCode === 38) {\r\n      loadPrevInput(-1);\r\n    } else if (keyCode === 40) {\r\n      loadPrevInput(1);\r\n    }\r\n  };\r\n\r\n  const loadPrevInput = dir => {\r\n    if (!previousInputs.length) {\r\n      return;\r\n    }\r\n\r\n    if (dir === -1) {\r\n      if (cmdIx === -1) {\r\n        cmdIx = previousInputs.length - 1;\r\n      } else if (cmdIx > 0) {\r\n        cmdIx--;\r\n      } else {\r\n        return;\r\n      }\r\n    } else {\r\n      if (cmdIx === -1) {\r\n        entry = \"\";\r\n        return;\r\n      } else {\r\n        cmdIx++;\r\n      }\r\n    }\r\n\r\n    if (cmdIx > previousInputs.length - 1) {\r\n      cmdIx = -1;\r\n      entry = \"\";\r\n      return;\r\n    }\r\n\r\n    entry = previousInputs[cmdIx];\r\n  };\r\n\r\n  const submit = () => {\r\n    let ent = entry.trim();\r\n    if (!ent.startsWith(\"dev|\")) {\r\n      ent = ent.toLowerCase();\r\n    }\r\n    submitUserEntry(ent);\r\n  };\r\n\r\n  const submitUserEntry = ent => {\r\n    gameState.handleUserEntry(ent);\r\n    previousInputs = [...previousInputs, ent];\r\n    if (previousInputs.length > 10) {\r\n      previousInputs = previousInputs.slice(1);\r\n    }\r\n    entry = \"\";\r\n    cmdIx = -1;\r\n    document.getElementById(\"userInput\").focus();\r\n  };\r\n\r\n  const help = () => {\r\n    helpVisible = true;\r\n  };\r\n\r\n  var tagBody = \"(?:[^\\\"'>]|\\\"[^\\\"]*\\\"|'[^']*')*\";\r\n\r\n  var tagOrComment = new RegExp(\r\n    \"<(?:\" +\r\n      // Comment body.\r\n      \"!--(?:(?:-*[^->])*--+|-?)\" +\r\n      // Special \"raw text\" elements whose content should be elided.\r\n      \"|script\\\\b\" +\r\n      tagBody +\r\n      \">[\\\\s\\\\S]*?</script\\\\s*\" +\r\n      \"|style\\\\b\" +\r\n      tagBody +\r\n      \">[\\\\s\\\\S]*?</style\\\\s*\" +\r\n      // Regular name\r\n      \"|/?[a-z]\" +\r\n      tagBody +\r\n      \")>\",\r\n    \"gi\"\r\n  );\r\n  const sanitize = text => {\r\n    var oldHtml;\r\n    do {\r\n      oldHtml = text;\r\n      text = text.replace(tagOrComment, \"\");\r\n    } while (text !== oldHtml);\r\n    return text.replace(/</g, \"&lt;\");\r\n  };\r\n\r\n  const convertSyntax = text => {\r\n    let nt = text\r\n      .replace(/\\^(.+?)\\^/g, \"<h3>$1</h3>\")\r\n      .replace(/~(.+?)~/g, \"<entry>$1</entry>\")\r\n      .replace(/#(.+?)#/g, \"<pre>$1</pre>\")\r\n      .replace(/\\\\/g, \"<br />\")\r\n      .replace(/\"(.+?)\"/g, '<speech>\"$1\"</speech>')\r\n      .replace(/^\\+(.+?)\\+$/, \"<waitForInput>$1</waitForInput>\")\r\n      .replace(/%(.+?)%/g, `<hint>$1</hint>`);\r\n\r\n    if (nt.startsWith(\"]\")) {\r\n      return nt.replace(/^]+/, \"\");\r\n    } else {\r\n      return nt;\r\n    }\r\n  };\r\n\r\n  const getClass = line => {\r\n    if (line.startsWith(\"]]\")) {\r\n      return \"indent2\";\r\n    } else if (line.startsWith(\"]\")) {\r\n      return \"indent\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const hintize = line => {\r\n    if (line.indexOf(\"<hint>\") === -1) {\r\n      return [{ type: \"html\", value: line }];\r\n    }\r\n\r\n    let chunks = [];\r\n    let matches = line.match(/<hint>(.+?)<\\/hint>/gi);\r\n\r\n    let tempLine = line;\r\n\r\n    matches.forEach(x => {\r\n      let ix = tempLine.indexOf(x);\r\n\r\n      if (ix > 0) {\r\n        chunks.push({ type: \"html\", value: tempLine.substr(0, ix) });\r\n        tempLine = tempLine.substr(ix);\r\n      }\r\n\r\n      const hintMatch = x.match(/<hint>(.+?)<\\/hint>/);\r\n\r\n      chunks.push({ type: \"hint\", value: hintMatch[1] });\r\n      tempLine = tempLine.substr(hintMatch[0].length);\r\n    });\r\n\r\n    if (tempLine.length) {\r\n      chunks.push({ type: \"html\", value: tempLine });\r\n    }\r\n\r\n    return chunks;\r\n  };\r\n\r\n  const clickHint = item => {\r\n    submitUserEntry(\"look \" + item.target.innerText);\r\n  };\r\n\r\n  function travel(event) {\r\n    submitUserEntry(event.detail.direction);\r\n  }\r\n\r\n  function toggleMiniSideMenu() {\r\n    isMiniSideMenuOpen = !isMiniSideMenuOpen;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  form {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 0.5em;\r\n    align-items: center;\r\n    flex: none;\r\n  }\r\n\r\n  form > input {\r\n    flex: auto;\r\n    width: 10px;\r\n  }\r\n\r\n  form > span {\r\n    background-color: transparent;\r\n    color: white;\r\n    border: 1px white solid;\r\n    border-radius: 2em;\r\n    vertical-align: middle;\r\n    height: 1.5em;\r\n    text-align: center;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    padding: 0 0.2em;\r\n  }\r\n\r\n  button {\r\n    margin-top: 1.5em;\r\n  }\r\n\r\n  .indent {\r\n    margin-left: 2em;\r\n  }\r\n\r\n  .indent2 {\r\n    margin-left: 4em;\r\n  }\r\n\r\n  :global(entry) {\r\n    color: #666;\r\n  }\r\n\r\n  :global(entry)::before {\r\n    content: \"> \";\r\n  }\r\n\r\n  .side-menu {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1em;\r\n  }\r\n\r\n  .mini-side-menu-toggle {\r\n    display: none;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n\r\n  .mini-side-menu-toggle button {\r\n    background-color: #222;\r\n    color: #aaa;\r\n    border: 1px #aaa solid;\r\n    border-radius: 5px;\r\n    font-variant: small-caps;\r\n  }\r\n\r\n  .mini-side-menu-toggle button:hover {\r\n    background-color: #333;\r\n    color: white;\r\n    border: 1px white solid;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .side-menu.closed {\r\n      display: none;\r\n    }\r\n    .side-menu {\r\n      opacity: .9;\r\n      background-color: #222;\r\n      position: fixed;\r\n      inset: 50px 0 0 0;\r\n      z-index: 2;\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: center;\r\n    }\r\n    .mini-side-menu-toggle {\r\n      display: block;\r\n      z-index: 3;\r\n    }\r\n  }\r\n</style>\r\n\r\n<main>\r\n  {#if helpVisible}\r\n    <Help\r\n      showHints={gameState.options.showHints}\r\n      on:toggleHints={() => (gameState.options.showHints = !gameState.options.showHints)} />\r\n    <button on:click={() => (helpVisible = false)}>Ok, ok. Let me play!</button>\r\n  {:else if gameState}\r\n    <room bind:this={output}>\r\n      {#if gameState.isGameOver}\r\n        <h3>GAME OVER</h3>\r\n      {:else if gameState.isEnd}\r\n        <h3>The End</h3>\r\n      {/if}\r\n\r\n      {#each gameState.text.split('\\n').filter(x => !!x) as line}\r\n        <p class={getClass(line)}>\r\n          {#if line.indexOf('^') === 0}\r\n            {@html convertSyntax(line)}\r\n          {:else}\r\n            {#each hintize(convertSyntax(sanitize(line))) as chunk}\r\n              {#if chunk.type === 'html'}\r\n                {@html chunk.value}\r\n              {:else}\r\n                <hint on:click={clickHint}>{chunk.value}</hint>\r\n              {/if}\r\n            {/each}\r\n          {/if}\r\n        </p>\r\n      {/each}\r\n    </room>\r\n    {#if gameState.isGameOver}\r\n      <button on:click={() => location.reload()}>Try again</button>\r\n    {:else if gameState.isEnd}\r\n      <button on:click={() => location.reload()}>New Game</button>\r\n    {:else}\r\n      <form on:submit|preventDefault={submit} id=\"inputForm\">\r\n        <input\r\n          use:focus\r\n          bind:value={entry}\r\n          on:keydown={keydown}\r\n          id=\"userInput\" />\r\n        <span on:click={help}>❔</span>\r\n      </form>\r\n    {/if}\r\n  {/if}\r\n</main>\r\n\r\n<div class={`side-menu ${isMiniSideMenuOpen ? \"open\" : \"closed\"}`}>\r\n  <Commands\r\n    showIncantations={knowsAnyIncantations}\r\n    on:command={(event) => {\r\n      submitUserEntry(event.detail.command);\r\n    }}\r\n  />\r\n  <Location\r\n    coords={coords}\r\n    hasCompass={hasCompass}\r\n    exits={exits}\r\n    isDark={isDark}\r\n    isLightOn={isLightOn}\r\n    on:travel={travel}\r\n  />\r\n</div>\r\n\r\n<div class=\"mini-side-menu-toggle\">\r\n  <button on:click={toggleMiniSideMenu}>\r\n    {#if isMiniSideMenuOpen}\r\n      x\r\n    {:else}\r\n      &lt;\r\n    {/if}\r\n  </button>\r\n</div>\r\n","<script>\r\n  import MainMenu from \"./MainMenu.svelte\";\r\n  import Game from \"./Game.svelte\";\r\n\r\n  let playing = false;\r\n  let loadGame = false;\r\n\r\n  const newGame = () => {\r\n    loadGame = false;\r\n    playing = true;\r\n  };\r\n\r\n  const continueGame = () => {\r\n    loadGame = true;\r\n    playing = true;\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .menu-holder {\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow: auto;\r\n  }\r\n</style>\r\n\r\n<bg />\r\n{#if !playing}\r\n  <main>\r\n    <div class=\"menu-holder\">\r\n      <MainMenu on:newGame={newGame} on:continueGame={continueGame} />\r\n    </div>\r\n  </main>\r\n{:else}\r\n  <Game {loadGame} />\r\n{/if}\r\n","<script>\r\n  let showSpoilers = false;\r\n</script>\r\n\r\n<bg />\r\n<main>\r\n  <room>\r\n    <h1>Walkthrough</h1>\r\n    <p>\r\n      If you're having a hard time and need to know EXACTLY what to do, this is\r\n      the page for you. I recommend trying to figure it out yourself but if\r\n      you've truly hit a roadblock then by all means, read below.\r\n    </p>\r\n    {#if showSpoilers}\r\n      <p>\r\n        The following walkthrough skips all optional content like notes with\r\n        lore and story on them and all unnecessary conversation with charactesr\r\n        in the game. Performing these actions in this order completes the game.\r\n      </p>\r\n      <p>\r\n        There are two endings possible. If you want the good ending, you must\r\n        complete everything below in order. If you want the bad ending, skip to\r\n        the section labeled Bad Ending Walkthrough.\r\n      </p>\r\n      <h2>Good Ending Walkthrough</h2>\r\n      <h3>Clearing in a Forest</h3>\r\n      <p>Look at the hole and take the stone inside.</p>\r\n      <h3>Forest Bridge, South Bank</h3>\r\n      <p>\r\n        Look at the bridge to see the rod. Throw the stone (throw stone), which\r\n        distracts the pirahna. Take the rod.\r\n      </p>\r\n      <h3>A Quiet Fork in the Forest</h3>\r\n      <p>Look at the wood and take the nail you see.</p>\r\n      <h3>Inside the Creepy Hut</h3>\r\n      <p>\r\n        Greet the woman and tell her you're not a threat (\"no\"). Then ask her\r\n        about the cure (\"ask rhode about cure\"). She mentions ingredients. Ask\r\n        her about them. Ask rhode about puffball too. Then ask her about\r\n        scissors. Tell her \"yes\", you want them. Take the scissors.\r\n      </p>\r\n      <h3>A Pool of Standing Water</h3>\r\n      <p>Use the scissors on a puffball. (cure ingredient 1)</p>\r\n      <h3>Mosquito Spawning Pool</h3>\r\n      <p>Take a mosquito egg. (cure ingredient 2)</p>\r\n      <h3>White Sand Beaches, East</h3>\r\n      <p>Look at the boat to see the sledgehammer. Take the sledgehammer.</p>\r\n      <h3>Ruined Hall</h3>\r\n      <p>\r\n        There's a device on the wall that opens the way to the east but it's\r\n        missing a handle. Use the rod on the device. Then use the device itself.\r\n        Take the rod once the way is open.\r\n      </p>\r\n      <h3>Ruined Square, South</h3>\r\n      <p>The south wall is weak. Use the sledgehammer on the wall.</p>\r\n      <h3>Ruined House</h3>\r\n      <p>Open the chest. Take the flashlight.</p>\r\n      <h3>Ruined Square, North</h3>\r\n      <p>Use the flashlight to turn it on. Open the hatch. Go down.</p>\r\n      <h3>Inside the Hatch</h3>\r\n      <p>\r\n        Take the rune. It's the etavoner rune. You need to dunk it in the forest\r\n        well to activate it.\r\n      </p>\r\n      <h3>Ruined Lab</h3>\r\n      <p>Look at the poster. Look at the vials. Take the potion.</p>\r\n      <h3>An Old Well in the Forest</h3>\r\n      <p>\r\n        Put the etavoner rune in the pail. Drop the pail. Use the crank. Take\r\n        the rune. With your flashlight on, go east.\r\n      </p>\r\n      <h3>Cave of Bones</h3>\r\n      <p>\r\n        Look at the hornet. Look at the sac. Take the sac. This allows entry\r\n        into the hornet hive later.\r\n      </p>\r\n      <h3>A Rocky Cliff Peninsula, High Above the Ocean</h3>\r\n      <p>\r\n        Incant etavoner to repair the bridge. Go south to the lighthouse and\r\n        enter it.\r\n      </p>\r\n      <h3>Lighthouse, First Floor</h3>\r\n      <p>Look at the bed, then the pillow. Take the key. Go up.</p>\r\n      <h3>Lighthouse, Below the Light</h3>\r\n      <p>Use the key on the padlock. Go up.</p>\r\n      <h3>Lighthouse, Light</h3>\r\n      <p>\r\n        Give the potion to the woman (her name's Ionyne). She drinks the potion\r\n        and gives you back an empty bottle. She makes you a bird friend.\r\n      </p>\r\n      <h3>Gull Nesting Grounds</h3>\r\n      <p>\r\n        Now that you're a bird friend, take the rainbow shell from the nest.\r\n        (cure ingredient 3)\r\n      </p>\r\n      <h3>An Old Well in the Forest</h3>\r\n      <p>\r\n        Return to the old well. You should still have the pail full of water\r\n        sitting on the side of the well. Use the empty bottle on the water to\r\n        take some.\r\n      </p>\r\n      <h3>Ruined Temple</h3>\r\n      <p>\r\n        Use the rod on the device. Use the device. You can leave the rod. You\r\n        won't need it again. Go down.\r\n      </p>\r\n      <h3>Underground Chasm</h3>\r\n      <p>Incant etavoner to repair the bridge. Go south.</p>\r\n      <h3>Silent Chamber</h3>\r\n      <p>Put the water bottle onto the scale. The passage west opens.</p>\r\n      <h3>Small Mountain Lake</h3>\r\n      <p>\r\n        Look at the plants. Take the white-leafed plant. (cure ingredient 4)\r\n      </p>\r\n      <h3>Campsite at the Cliffside</h3>\r\n      <p>\r\n        Look at the pouch. Take the rune. To activate the rune, you must give it\r\n        to the hornet queen. Return all the way to the hornet's nest area in the\r\n        forest.\r\n      </p>\r\n      <h3>The Hive Entrance</h3>\r\n      <p>\r\n        Go down. You have the pheromone sac from the Cave of Bones so you'll be\r\n        ignored.\r\n      </p>\r\n      <h3>Hive, Queen's Chamber</h3>\r\n      <p>Give the eltnamsid rune to the queen.</p>\r\n      <h3>The Bat Cave</h3>\r\n      <p>Incant eltnamsid to destroy the wall. Go through.</p>\r\n      <h3>Hidden Cache</h3>\r\n      <p>Take the silver box.</p>\r\n      <h3>Inside the Creep Hut</h3>\r\n      <p>\r\n        Give the silver box to Rhode. Take the map. Return all the way to the\r\n        mountain labyrinth.\r\n      </p>\r\n      <h3>Labyrinth, South Gate</h3>\r\n      <p>\r\n        Exit to the east or west in either the Labyrinth, South Gate; Labyrinth,\r\n        Central Plaza; or Labyrinth, North Gate.\r\n      </p>\r\n      <h3>A Labyrinthine Passage</h3>\r\n      <p>\r\n        You should look at your map. It will tell you which direction to go.\r\n        Look at it, then go that direction ONCE. Repeat 10 total times. If\r\n        you're lazy and don't want to do that, just follow these directions: n,\r\n        e, n, s, s, w, s, e, n, e. If you do it wrong, you will be returned to\r\n        one of the central Labyrinth rooms.\r\n      </p>\r\n      <h3>Heart of the Labyrinth</h3>\r\n      <p>\r\n        Take the rune. To activate the lievnu rune, you must use it on the\r\n        lighthouse's light. When you take the rune, Rhode will also finish her\r\n        study of the silver box.\r\n      </p>\r\n      <h3>Lighthouse, Light</h3>\r\n      <p>Use the lievnu rune on the light.</p>\r\n      <h3>Inside the Creepy Hut</h3>\r\n      <p>\r\n        This is your last visit to Rhode. She gives you back the silver box.\r\n        Incant etavoner to fix it. Incant lievnu to unlock its power. Give rhode\r\n        the rainbow shell, the puffball, the mosquito egg, and the root. She\r\n        will give you the cure.\r\n      </p>\r\n      <h3>Outside a Log Cabin in the Forest</h3>\r\n      <p>Give the man the nail. This is Arden. Head west into his cabin.</p>\r\n      <h3>Cabin, Interior</h3>\r\n      <p>\r\n        Give the cure to Edra (his sleeping brother). He wakes up and you learn\r\n        to incant rhocna.\r\n      </p>\r\n      <h3>Toppled Tree, Growing Mushrooms</h3>\r\n      <p>\r\n        Incant rhocna to freeze the mushrooms in place. You need to touch the\r\n        colored mushrooms in order. Each color represents a character in the\r\n        game. You learn the order by finding Ophelia's journal in Long Abandoned\r\n        Campsite in the tent. You can give the journal to Rhode to repair it and\r\n        make it easier to read.\r\n      </p>\r\n      <p>\r\n        The character order is Edra (blue eyes), Mine! (Ophelia's yellow hair),\r\n        Merek (red cape), Rhode (purple light and eyes), Arden (orange shirt),\r\n        Meredith (green sneakers), Stanley (indigo suit). Touch the mushrooms in\r\n        this order: blue, yellow, red, purple, orange, green, indigo.\r\n      </p>\r\n      <p>\r\n        You then experience memories of each character in the game and learn to\r\n        incant hsinimid, partne, and etalosi.\r\n      </p>\r\n      <h3>The Black Summit</h3>\r\n      <p>\r\n        Incant lievnu to reveal It. Incant hsinimid to weaken it. Open the\r\n        silver box. Incant partne to trap it in the box. Then incant etalosi.\r\n      </p>\r\n      <h2>Bad Ending Walkthrough</h2>\r\n      <p>\r\n        Here is a summary of the actions required to attain the bad ending as quickly as possible. For more information, reference the good ending walkthrough.\r\n      </p>\r\n      <ul>\r\n        <li>Get the rod from under the bridge</li>\r\n        <li>Get the sledgehammer from the boat on the coast</li>\r\n        <li>Open the way to the ruins with the rod. Take the potion from the Ruined Lab.</li>\r\n        <li>Use the sledgehammer to access the Ruined House and take the flashlight.</li>\r\n        <li>Open the hatch in the ruins, turn on the flashlight and then take the rune from inside the hatch</li>\r\n        <li>Go to the forest well, put the rune in the pail, drop the pail, use the crank, then take the rune. You can now incant etavoner.</li>\r\n        <li>Go to the coast, incant etavoner to repair the bridge, enter the lighthouse. Get the key from under the pillow, use it to access the light. Give the potion to Ionyne. Now you have an empty bottle.</li>\r\n        <li>Return to the forest well and use the empty bottle on the water (which should be in the pail).</li>\r\n        <li>Return to the ruins, use the rod+device to open the way through the Ruined Temple</li>\r\n        <li>Incant etavoner to repair the bridge in the chasm, continue to the Silent Chamber.</li>\r\n        <li>Put the water bottle onto the scale in the Silent Chamber</li>\r\n        <li>Now just head all the way to the mountain summit and take the crystal from Ophelia</li>\r\n      </ul>\r\n    {:else}\r\n      <button on:click={() => (showSpoilers = true)}>Show Spoilers</button>\r\n    {/if}\r\n  </room>\r\n</main>\r\n","<script>\r\n  import { Router, Route } from \"svelte-routing\";\r\n  import Start from \"./Start.svelte\";\r\n  import Walkthrough from \"./Walkthrough.svelte\";\r\n\r\n  export let url = \"\";\r\n</script>\r\n\r\n<Router url={url}>\r\n  <Route path={window.hostDir + \"/walkthrough\"} component={Walkthrough} />\r\n  <Route path=\"\" component={Start} />\r\n</Router>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","merged","len","Math","max","length","i","exclude_internal_props","props","result","null_to_empty","value","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","HtmlTag","[object Object]","html","this","u","n","t","innerHTML","Array","from","childNodes","m","stylesheet","current_component","active","current_rules","create_rule","duration","delay","ease","uid","step","keyframes","p","rule","str","hash","charCodeAt","head","sheet","insertRule","cssRules","animation","delete_rule","split","filter","anim","indexOf","join","deleteRule","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","call","setContext","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flush","shift","update","pop","has","add","clear","fragment","before_update","after_update","promise","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","fulfill","loop","then","get_spread_object","spread_props","create_component","mount_component","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","parent_component","prop_values","bound","Map","ready","ret","rest","hydrate","l","children","SvelteComponent","$destroy","index","splice","subscriber_queue","writable","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","to","replace","replaceState","pushState","createHistory","Boolean","initialPathname","stack","pathname","search","states","entries","_","uri","createMemorySource","paramRe","isSplat","segment","segmentize","stripSlashes","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","routeSegments","routeSegment","uriSegment","undefined","decodeURIComponent","dynamicMatch","exec","combinePaths","basepath","url","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","levels","updates","to_null_out","accounted_for","routeParams","routeProps","$activeRoute","$$props","cubicOut","fade","linear","getComputedStyle","opacity","fly","y","target_opacity","transform","od","width","height","showClose","windowWidth","widthStyle","heightStyle","modalStyle","origin","toString","hostDir","hasSavedGame","exportString","exportTextbox","localStorage","getItem","continueDisabled","confirm","gameStr","prompt","json","atob","JSON","parse","setItem","alert","btoa","select","execCommand","showIncantations","cmd","innerText","matches","trim","command","allowTogglingHints","showHints","onOrOff","opposite","ask","args","write","findTarget","parseCmds","slug","unknownTarget","combine","target1","slug1","target2","slug2","cmds","id","give","item","findItem","_requiredFlag","getFlag","incant","incantation","knowsAnyIncantations","unknownCmd","incantationObj","incantations","find","toLowerCase","toUpperCase","room","description","incantsList","inc","sorter","mapper","listInventory","inventory","colLength","floor","invLines","itemLeft","itemRight","padEnd","look","dark","coords","features","showFeatures","move","dir","lastMoveDir","take","use","obj","addItem","items","setFlag","incVar","setVarValue","parseFloat","getVarValue","choice","repeatText","resolutionObj","choiceObj","repeat","resolution","callCommon","roomSlug","rooms","_common","console","log","decVar","amount","parseInt","dialog","dialogObj","userEntry","topic","topicCmds","topicName","keys","z","msg","isEnd","gameOver","isGameOver","ifFlag","trueCmds","falseCmds","feature","ifFlagWrite","flag","message","ifHasItem","ifRoom","ifVar","operator","compareValue","checkVal","checkVarName","varMatches","getVarName","checkResult","invokeRoom","cmdName","ifIsIn","val","ix","pickOne","random","removeItem","saveGame","savedGame","stringify","roomVars","globalVars","currRoomSlug","switchBranch","unsetFlag","waitForInput","waitCmds","wc","writeCapturing","capturedText","addHints","replaceVariables","replaceNotices","paragraphs","updateScroll","haystack","gameState","p1","feat","getFeature","notice","varName","hintMsg","slugs","altSlugs","concat","RegExp","writeRoomCoords","roomFeature","targetFlag","destroyedFlag","getFlagValue","fName","flagName","substring","getLocalVars","dict","prop","startsWith","handleChoiceInput","entry","resolutionPath","oppositeDirs","north","south","east","west","up","down","handleDarkRoom","invItem","parseStringCmd","handleDevCmd","itemId","loadRoom","shortcuts","w","cl","handleUserEntry","oldWaitCmds","chunks","putMatches","allowedVerbs","propKey","stand","some","load","bail","apply","destroyFeature","singleWordCmds","func","roomDesc","unknownMsgs","getGameState","loadGame","getRoomDictionary","verbs","inv","hasCompass","isDark","isLightOn","exits","travel","coordsNum","coordsXY","Number","exit","action_result","destroy","preventDefault","tagBody","getRoomExits","northFlag","southFlag","eastFlag","westFlag","upFlag","downFlag","gs","previousInputs","cmdIx","output","isMiniSideMenuOpen","helpVisible","setTimeout","scrollTop","scrollHeight","offsetTop","loadPrevInput","submitUserEntry","ent","getElementById","focus","tagOrComment","el","keyCode","oldHtml","nt","line","tempLine","substr","hintMatch","reload","playing","showSpoilers","Walkthrough","Start","body"],"mappings":"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"}